# Preferences
# ───────────

colorscheme default

hook global WinCreate ^[^*]+$ %{ add-highlighter window/ number-lines -hlcursor }

# set global grepcmd 'rg -Hn'
set global indentwidth 2
set global scrolloff 6,6
set global tabstop 2
set global ui_options ncurses_assistant=clippy ncurses_wheel_down_button=0
set global ui_options ncurses_set_title=no

add-highlighter global/ show-matching
add-highlighter global/ regex \b(TODO|FIXME|XXX|NOTE)\b 0:default+rb
add-highlighter global/ regex @\b(todo|fixme|xxx|note)\b 0:default+rb

map global normal <space> , -docstring 'leader'

# Find files under current directory
# ──────────────────────────────────

def find -params 1 -shell-script-candidates %{ find -type f } %{ edit %arg{1} }

# Create parent directories if missing
# ────────────────────────────────────

hook global BufWritePre .* %{ nop %sh{ dir=$(dirname $kak_bufname)
    [ -d $dir ] || mkdir --parents $dir
}}

# Plugins
# ───────

evaluate-commands %sh{
  cork init
}

# Filetypes
# ---------

evaluate-commands %sh{
    find "${kak_runtime}"/../kakoune-extra-filetypes/rc -type f -name \*\\.kak -exec printf 'source %s\n' '{}' \;
}

# source "%val{config}/plugins/plug.kak/rc/plug.kak"

# plug "alexherbo2/prelude.kak"
# plug "alexherbo2/move-line.kak" config %{
#    require-module move-line
#
#     map global normal <down> ': move-line-below<ret>'
#     map global normal <up> ': move-line-above<ret>'
# }
# plug "andreyorst/smarttab.kak" defer smarttab %{
#     set-option global softtabstop 2
# } config %{
#     # these languages will use `expandtab' behavior
#     hook global WinSetOption filetype=(javascript|typescript|rust|markdown|kak|lisp|scheme|sh|perl) expandtab
#     # these languages will use `noexpandtab' behavior
#     hook global WinSetOption filetype=(makefile|gas|go) noexpandtab
#     # these languages will use `smarttab' behavior
#     hook global WinSetOption filetype=(c|cpp) smarttab
# }
# plug "delapouite/kakoune-buffers" config %{
#     hook global WinDisplay .* info-buffers
# 
#     map global normal ^ q
#     map global normal <a-^> Q
#     map global normal q b
#     map global normal Q B
#     map global normal <a-q> <a-b>
#     map global normal <a-Q> <a-B>
#     map -docstring "Buffer commands" global user <b> %{:enter-user-mode buffers<ret>}
#     map global normal b ': enter-buffers-mode<ret>' -docstring 'buffers'
#     map global normal B ': enter-user-mode -lock buffers<ret>' -docstring 'buffers (lock)'
# }
# plug "lePerdu/kakboard" config %{
#     hook global WinCreate .* %{ kakboard-enable }
# }
# plug "kak-lsp/kak-lsp" do %{
#     cargo install --locked --force --path .
# } config %{
#     map -docstring "Language server commands" global user <l> %{:enter-user-mode lsp<ret>}
# 
#     hook global WinSetOption filetype=(html|css|json|bash|rust|python|go|javascript|typescript|c|cpp) %{
#         lsp-enable-window
#         lsp-auto-hover-enable
#     }
# 
#     # Inlay hints for rust-analyzer
#     hook global WinSetOption filetype=rust %{
#         hook window -group rust-inlay-hints BufReload .* rust-analyzer-inlay-hints
#         hook window -group rust-inlay-hints NormalIdle .* rust-analyzer-inlay-hints
#         hook window -group rust-inlay-hints InsertIdle .* rust-analyzer-inlay-hints
#         hook -once -always window WinSetOption filetype=.* %{
#             remove-hooks window rust-inlay-hints
#         }
#     }
# 
#     set global lsp_hover_max_lines 15
# }
# plug "https://gitlab.com/Screwtapello/kakoune-cargo" config %{
#     hook global WinSetOption filetype=(rust) %{
#         map -docstring "Cargo commands" buffer user <a> %{:enter-user-mode cargo<ret>}
#     }
# }
# plug "https://gitlab.com/Screwtapello/kakoune-state-save" config %{
#     hook global KakBegin .* %{
#         state-save-reg-load colon
#         state-save-reg-load pipe
#         state-save-reg-load slash
#     }
#     hook global KakEnd .* %{
#         state-save-reg-save colon
#         state-save-reg-save pipe
#         state-save-reg-save slash
#     }
#     hook global FocusOut .* %{ state-save-reg-save dquote }
#     hook global FocusIn  .* %{ state-save-reg-load dquote }
# }
# plug "https://gitlab.com/FlyingWombat/case.kak" config %{
#     map -docstring "Case conversion" global user <c> %{:enter-user-mode case<ret>}
# }

# Mappings
# ────────

map global normal <%> '<c-s>%' # Save position before %
map global normal '#' :comment-line<ret>

# Enable <tab>/<s-tab> for insert completion selection
# ────────────────────────────────────────────────────

hook global InsertCompletionShow .* %{ map window insert <tab> <c-n>; map window insert <s-tab> <c-p> }
hook global InsertCompletionHide .* %{ unmap window insert <tab> <c-n>; unmap window insert <s-tab> <c-p> }

# Increase block indentation on `\n`
# ──────────────────────────────────

hook global InsertChar \n %[ try %[ exec -draft k<a-x> <a-k>[{(]\h*$<ret> j<a-gt> ] ]
