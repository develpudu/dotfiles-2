#!/bin/bash

system_type=$(uname -s)

RCol='\e[0m'    # Text Reset

# Regular           Bold                Underline           High Intensity      BoldHigh Intens     Background          High Intensity Backgrounds
Bla='\e[0;30m';     BBla='\e[1;30m';    UBla='\e[4;30m';    IBla='\e[0;90m';    BIBla='\e[1;90m';   On_Bla='\e[40m';    On_IBla='\e[0;100m';
Red='\e[0;31m';     BRed='\e[1;31m';    URed='\e[4;31m';    IRed='\e[0;91m';    BIRed='\e[1;91m';   On_Red='\e[41m';    On_IRed='\e[0;101m';
Gre='\e[0;32m';     BGre='\e[1;32m';    UGre='\e[4;32m';    IGre='\e[0;92m';    BIGre='\e[1;92m';   On_Gre='\e[42m';    On_IGre='\e[0;102m';
Yel='\e[0;33m';     BYel='\e[1;33m';    UYel='\e[4;33m';    IYel='\e[0;93m';    BIYel='\e[1;93m';   On_Yel='\e[43m';    On_IYel='\e[0;103m';
Blu='\e[0;34m';     BBlu='\e[1;34m';    UBlu='\e[4;34m';    IBlu='\e[0;94m';    BIBlu='\e[1;94m';   On_Blu='\e[44m';    On_IBlu='\e[0;104m';
Pur='\e[0;35m';     BPur='\e[1;35m';    UPur='\e[4;35m';    IPur='\e[0;95m';    BIPur='\e[1;95m';   On_Pur='\e[45m';    On_IPur='\e[0;105m';
Cya='\e[0;36m';     BCya='\e[1;36m';    UCya='\e[4;36m';    ICya='\e[0;96m';    BICya='\e[1;96m';   On_Cya='\e[46m';    On_ICya='\e[0;106m';
Whi='\e[0;37m';     BWhi='\e[1;37m';    UWhi='\e[4;37m';    IWhi='\e[0;97m';    BIWhi='\e[1;97m';   On_Whi='\e[47m';    On_IWhi='\e[0;107m';

banner=$(cat <<- "END"

.-,--.      .       .           ,-,---.         .      .
' |   \ ,-. |- ," . |  ,-. ,-.   '|___/ ,-. ,-. |- ,-. |- ,-. ,-. ,-. ,-. ,-. ,-.
, |   / | | |  |- | |  |-' `-.   ,|   \ | | | | |  `-. |  |   ,-| | | | | |-' |  
`-^--'  `-' `' |  ' `' `-' `-'  `-^---' `-' `-' `' `-' `' '   `-^ |-' |-' `-' '  
               '                                                  |   |          
                                                                  '   '
END
)
# Highlighting fix '


# ────────────────
# Helper functions
# ────────────────

ask() {
  # https://djm.me/ask
  local prompt default reply

  if [ "${2:-}" = "Y" ]; then
    prompt="Y/n"
    default=Y
  elif [ "${2:-}" = "N" ]; then
    prompt="y/N"
    default=N
  else
    prompt="y/n"
    default=
  fi

  while true; do

    # Ask the question (not using "read -p" as it uses stderr not stdout)
    echo -n "$1 [$prompt] "

    # Read the answer (use /dev/tty in case stdin is redirected from somewhere else)
    read reply </dev/tty

    # Default?
    if [ -z "$reply" ]; then
      reply=$default
    fi

    # Check if the reply is valid
    case "$reply" in
      Y*|y*) return 0 ;;
      N*|n*) return 1 ;;
    esac

  done
}

title() {
  echo -e "${BBlu}=> ${Gre}${@}${RCol}"
}

do_execute() {
  local assumeYes
  local dryRun
  local opt
  local OPTARG
  local OPTIND
  local sh
  local useSudo

  assumeYes=0
  dryRun=0
  useSudo=0

  while getopts "nsy" opt; do
    case ${opt} in
      n)
        dryRun=1
        ;;
      s)
        useSudo=1
        ;;
      y)
        assumeYes=1
        ;;
      \?)
        echo "Invalid option: -$OPTARG" >&2
        ;;
    esac
  done
  shift $((OPTIND-1))

  sh=$@

  [ $useSudo -eq 1 ] && sh="/usr/bin/sudo \"$sh\""

  printf "  "

  [ $dryRun -eq 1 ] && printf "${Red}(dry run)${RCol} "

  echo $sh

  [ $dryRun -eq 0 ] && "$sh"
}

warn() {
  echo "${Red}$@${RCol}" >&2
}

# ────────────
# Bootstrapper
# ────────────

echo -e "${BGre}${banner}${RCol}"

if [ "$system_type" = "Darwin" ]; then

  if ! command -v brew >/dev/null 2>&1; then
    echo "Installing homebrew"
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  if [ -f "$HOME/.Brewfile" ]; then
    echo "Updating homebrew bundle"
    brew bundle --global
  fi

elif [ "$system_type" = "Linux" ]; then

  release_name=$(lsb_release -si)

  case $release_name in
    VoidLinux)
      title "Updating xbps & system"
      do_execute $@ -s "xbps-install -Su"
      do_execute $@ -s "xbps-install -Su"

      title "Installing packages"
      if [ -f "$HOME/.xbps-packages" ]; then
        do_execute $@ "cat $HOME/.xbps-packages | xargs sudo xbps-install -S"
      else
        warn "Missing `$HOME/.xbps-packages` package list"
      fi
      ;;

    *)
      echo "No support for ${release_name}"
      ;;
  esac

fi

# kak: filetype=sh
# vi: ft=sh
